{"version":3,"sources":["components/Header.tsx","context/reducer.tsx","context/GlobalState.tsx","components/Balance.tsx","components/IncomeExpenses.tsx","components/Transaction.tsx","components/TransactionList.tsx","components/AddTransaction.tsx","App.tsx","index.tsx"],"names":["Header","id","reducer","state","initialState","action","type","transactions","filter","x","payload","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","onClick","text","Math","abs","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","Number","onChange","target","placeholder","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44bb6f06.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <h2 id=\"header\">\n            Expense Tracker\n        </h2>\n    )\n}\n\nexport default Header;","import { initialState } from './GlobalState';\n\nfunction reducer(state = initialState, action: any) {\n\n    switch(action.type) {\n        case \"DELETE_TRANSACTION\" :\n            return {\n                ...state,\n                transactions : state.transactions.filter((x: { id: number, text: string, amount: number }) => x.id !== action.payload)\n            }\n\n        case \"ADD_TRANSACTION\" :\n            return {\n                ...state,\n                transactions : [\n                    action.payload,\n                    ...state.transactions\n                ] \n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React, { createContext, useReducer } from 'react';\nimport reducer from './reducer';\n\n\n\n//Initial State\nexport interface transactions { id: number, text: string, amount: number }\nexport const initialState = {\n    transactions: [] as transactions[]\n}\n\n\n\n//Create Context\nexport const GlobalContext = createContext<any>(initialState);\n\n\n\n//Provider Component\ninterface GlobalProviderProp {\n    children: JSX.Element | JSX.Element[];\n}\nexport const GlobalProvider = ({ children }: GlobalProviderProp) => {  \n    const [ state, dispatch ] = useReducer(reducer, initialState);\n  \n    //Actions\n    function deleteTransaction(id: number): void {\n        dispatch({\n            type    : \"DELETE_TRANSACTION\",\n            payload : id\n        })\n    }\n    function addTransaction(transaction: { id: number, text: string, amount: number }): void {\n        dispatch({\n            type    : \"ADD_TRANSACTION\",\n            payload : transaction\n        })\n    }\n  \n    return (\n        <GlobalContext.Provider value={{\n            transactions : state.transactions,\n            deleteTransaction,\n            addTransaction\n        } as {\n            transactions: transactions[],\n            deleteTransaction: () => void,\n            addTransaction: () => void\n        }}>\n           {\n              children\n           }\n        </GlobalContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction Balance() {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map((x: { id: number, text: string, amount: string }) => x.amount);\n    const total   = amounts.reduce((acc: number, item: string) => (acc + item), 0);\n\n    return (\n        <>\n            <h4 id=\"balance\"> Your Balance        </h4>\n            <h1 id=\"total\">   ${total.toFixed(2)} </h1>\n        </>\n    )\n}\n\nexport default Balance;","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction IncomeExpenses() {\n    const { transactions } = useContext(GlobalContext);\n  \n    const amounts = transactions.map((x: { id: number, text: string, amount: number }) => x.amount);\n  \n    const income = amounts\n    .filter((x: number) => x > 0)\n    .reduce((acc: number, item: number) => (acc += item), 0)\n    \n    const expense = amounts\n    .filter((x: number) => x < 0)\n    .reduce((acc: number, item: number) => (acc += item), 0)\n   \n    return (\n        <div className=\"incomeExpences\">\n            <div>\n               <h4 id=\"income\"> Income </h4>\n               <p className=\"money plus\"> {income.toFixed(2)}   </p>\n            </div>\n            <div>\n               <h4 id=\"expense\"> Expense </h4>\n               <p className=\"money minus\"> {expense.toFixed(2)} </p>\n            </div>\n        </div>\n    )\n}\n\nexport default IncomeExpenses;","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\ninterface TransactionProp {\n    transaction: { id: number, text: string, amount: number };\n}\n\nfunction Transaction({ transaction }: TransactionProp) {\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n    return (\n        <div>\n            <li\n              className={transaction.amount < 0 ? \"minus\" : \"plus\"}\n              key={transaction.id}\n            >\n                <button\n                   id=\"btnY\"\n                   onClick={() => deleteTransaction(transaction.id)}\n                > x </button>\n                {transaction.text} <span> {sign}${Math.abs(transaction.amount)} </span>\n            </li>\n        </div>\n    )\n}\n\nexport default Transaction;","import React, { useContext } from 'react';\nimport Transaction from './Transaction';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction TransactionList() {\n    const { transactions } = useContext(GlobalContext);\n\n    return (\n        <>\n            <h3 className=\"underlined\"> History </h3>\n            <ul id=\"transactionList\">\n                {\n                    transactions.map((x: { id: number, text: string, amount: number }) =>\n                        <Transaction\n                            key={x.id}\n                            transaction={x}\n                        />\n                    )\n                }\n            </ul> \n        </>\n    )\n}\n\nexport default TransactionList\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction AddTransaction() {\n    const [ text  , setText   ] = useState<string>(\"\");\n    const [ amount, setAmount ] = useState<number>(0);\n  \n    const { addTransaction } = useContext<any>(GlobalContext);\n  \n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n       e.preventDefault();\n       const newTransaction = {\n          id     : Math.floor(Math.random() * 100000000),\n          text,\n          amount : Number(amount)\n       }\n       addTransaction(newTransaction);\n    }\n  \n    return (\n        <>\n            <h3 className=\"underlined\"> Add new transaction </h3>\n            <form id=\"form\" onSubmit={onSubmit}>\n                <div>\n                   <label> Text </label>\n                   <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={text}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setText(e.target.value)}\n                      placeholder=\"Enter text...\"\n                   />\n                </div>\n \n                <div>\n                   <label>\n                      Amount\n                      (-ve = expense, +ve = income)\n                   </label>\n                   <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      value={amount}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAmount(Number(e.target.value))}\n                      placeholder=\"Enter amount...\"\n                   />\n                </div>\n \n                <button\n                   className=\"btn btn-warning\"\n                   id=\"btnX\"\n                > add transaction </button>\n            </form>\n        </>\n    )\n}\n\nexport default AddTransaction;","\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nclass App extends Component {\n    render() {\n        return (\n            <GlobalProvider>\n                <div id=\"app\">\n                    <Header/>\n                    <div className=\"container\">\n                        <Balance/>\n                        <IncomeExpenses/>\n                        <TransactionList/>\n                        <AddTransaction/>\n                    </div>\n                </div>\n            </GlobalProvider>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/Style.scss';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}